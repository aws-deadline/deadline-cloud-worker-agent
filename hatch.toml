[envs.default]
pre-install-commands = [
  "pip install -r requirements-testing.txt"
]

[envs.default.scripts]
sync = "pip install -r requirements-testing.txt"
test = "pytest {args:test/unit --numprocesses=auto}"
# Don't pass --numprocesses here so that tests run sequentially.
# pytest-xdist does not allow live output of stdout, meaning integ tests only show output after the test is done
# See: https://pytest-xdist.readthedocs.io/en/stable/known-limitations.html#output-stdout-and-stderr-from-workers
integ-test = "pytest test/integ {args}"
integ-windows = "pytest --no-cov test/integ/installer {args:}"
typing = "mypy {args:src test}"
style = [
  "ruff check {args:.}",
  "black --check --diff {args:.}",
]
fmt = [
  "black {args:.}",
  "style",
]
lint = [
  "style",
  "typing",
]

[envs.research]
pre-install-commands = [
  "pip install -r requirements-research.txt ."
]

[envs.research.scripts]
sync = "pip install -r requirements-research.txt"

[[envs.all.matrix]]
python = ["3.9", "3.10", "3.11"]

[envs.default.env-vars]
RUN_AS_ADMIN="true"

[envs.codebuild.scripts]
build = "hatch build {args:}"
version = "hatch version"
metadata = "hatch project metadata {args:}"
integ-test = "pytest --no-cov test/integ {args:}"

[envs.release]
detached = true

[envs.release.scripts]
deps = "pip install -r requirements-release.txt"
bump = "semantic-release -v --strict version --no-push --no-commit --no-tag --skip-build {args}"
version = "semantic-release -v --strict version --print {args}"
